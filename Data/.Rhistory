```{r}
range = '2005/'
autoplot(price$brent[range] - price$wti[range]) +
ylab("Spread") +
ggtitle("Brent/WTI Spread")
# Graph the spread
range = '2005/'
autoplot(price$brent[range] - price$wti[range]) +
ylab("Spread") +
ggtitle("Brent/WTI Spread")
# Graph the spread
range = '2005/'
autoplot(price$brent[range] - price$wti[range]) +
ylab("Spread") +
ggtitle("Brent/WTI Spread")
# Graph the spread
range = '2005/'
autoplot(price$brent[range] - price$wti[range]) +
ylab("Spread") +
ggtitle("Brent/WTI Spread")
joc <- ca.jo(price, type = 'eigen', ecdet = 'const',
K = 2, spec = 'transitory')
summary(joc)
actual_diff <- diff.xts(p_tib$wti:brent)
actualdiff
actual_diff
actual_diff <- diff.xts(p_tib$wti)
actual_diff
actual_diff <- diff.xts(p_tib[,1:2])
actual_diff
head(actual_diff)
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=c(wti, brent)))
new_predictions <- predict(jocols, newdata = p_tib['2015-07-15/'])
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=c(wti, brent)),
data = new_predictions)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=c(wti, brent)),
data = new_predictions)
length(index(new_predictions))
length(new_predictions$wti
)
length(new_predictions$brent)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti),
data = new_predictions)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(y=wti),
data = new_predictions)
head(new_predictions)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(y=wti.d),
data = new_predictions)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d),
data = new_predictions)
head(actual_diff)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d),
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=wti),
data = actual_diff)
head(actual_diff)
str(index(actual_diff))
str(index(new_predictions)))
str(index(new_predictions))
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
index(new_predictions) <- as.Date(index(new_predictions))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d),
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=wti),
data = actual_diff)
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
index(new_predictions) <- as.Date(index(new_predictions))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d), color = "red"
data = new_predictions) +
new_predictions <- as_xts(predict(jocols, newdata = p_tib['2015-07-15/']))
index(new_predictions) <- as.Date(index(new_predictions))
actual_diff <- diff.xts(p_tib[,1:2])['2015-07-15/']
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d), color = "red",
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=wti),
data = actual_diff)
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d), color = "red",
data = new_predictions, label="Fuck") +
geom_line(mapping = aes(x=index(actual_diff), y=wti),
data = actual_diff)
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d), color = "red",
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=wti),
data = actual_diff)
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=wti.d), color = "red",
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=wti),
data = actual_diff)
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=brent.d), color = "red",
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=brent),
data = actual_diff)
ggplot() +
geom_line(mapping = aes(x=index(new_predictions), y=brent.d), color = "red",
data = new_predictions) +
geom_line(mapping = aes(x=index(actual_diff), y=brent),
data = actual_diff)
sum(new_predictions[wti>0])
# Take two
p_predict$wti <- 1
# Take two
p_predict <- 1
p_predict$wti <- 1
p_predict
jocols
filter(new_predictions > 0)
filter(new_predictions$wto > 0)
filter(new_predictions$wti > 0)
filter(new_predictions$wti.d > 0)
eg <- lm(formula = wti ~ brent)
eg <- lm(formula = wti ~ brent, data = price)
summary(eg)
eg_adf <- adf.test(eg$residuals)
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals)
eg_adf
plot(eg$residuals, tye='l')
plot(eg$residuals, type='l')
eg_adf
eg_adf <- adf.test(eg$residuals, k=2)
eg_adf
eg_adf <- adf.test(eg$residuals, k=30)
eg_adf
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_correction <- lm(diff(wti) ~ diff(brent) + lag(eg$residuals),
data = price)
lag(eg$residuals)
head(lag(eg$residuals))
?lm
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_correction <- lm(diff(wti) ~ diff(brent) + lag(eg$residuals),
na.action = na.omit(),data = price)
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_correction <- lm(diff(wti) ~ diff(brent) + lag(eg$residuals),
na.action = na.omit,data = price)
length(diff(price$wti), diff(price$brent), lag(eg$residuals))
length(diff(price$wti))
length(diff(price$brent))
length(lag(eg$residuals))
data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals))
data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals)) %>%
head()
data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals)) %>%
length()
data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals)) %>%
length()
data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals)) %>%
dim()
data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals)) %>%
tail()
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_dat <- data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals))
eg_correction <- lm(wti ~ brent + lag.eg.residuals.,
na.action = na.omit,data = eg_dat)
summary(eg_corre)
summary(eg_correction)
eg_correction
plot(eg_correction$residuals, type='l')
mean(eg_correction$fitted.values)
eg_adf
epsilon <- "\epsilon"
epsilon <- "\\epsilon"
epsilon
?data.frame
epsilon <- data.frame(eg_adf$statistic, eg_adf$p.value)
episolon
epsilon
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_dat <- data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals))
eg_correction <- lm(wti ~ brent + lag.eg.residuals.,
na.action = na.omit,data = eg_dat)
epsilon <- data.frame(eg_adf$statistic, eg_adf$p.value)
col.names(epsilon) <- c("Augmented Dickey-Fulley Statistic", "P Value")
colnames(epsilon) <- c("Augmented Dickey-Fulley Statistic", "P Value")
epsilon
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_dat <- data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals))
eg_correction <- lm(wti ~ brent + lag.eg.residuals.,
na.action = na.omit,data = eg_dat)
epsilon <- data.frame(eg_adf$statistic, eg_adf$p.value)
colnames(epsilon) <- c("Augmented Dickey-Fulley Statistic", "P Value")
row.names(epsilon) <- "\u03B5"
epsilon
eg <- lm(formula = wti ~ brent, data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_dat <- data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals))
eg_correction <- lm(wti ~ brent + lag.eg.residuals.,
na.action = na.omit,data = eg_dat)
epsilon <- data.frame(eg_adf$statistic, eg_adf$p.value)
colnames(epsilon) <- c("Augmented Dickey-Fulley Statistic", "P Value")
row.names(epsilon) <- "$\\epsilon$"
knitr::print(summary(eg_correction))
knitr::kable(print(summary(eg_correction)))
eg_correction$coefficients
eg_correction$coefficients[1]
eg_correction$effects
eg_correction$qr
eg_correction$qr$qraux
eg_correction$qr$rank
eg_correction$qr$tol
eg_correction$terms
head(eg_correction$effects)
eg_correction
summary(eg_correction)
eg_correction$assign
eg_correction$na.action
eg_correction$df.residual
eg_correction$model
eg_summary <- summary(eg_correction)
eg_summary$coefficients
eg_summary
plot(eg_correction$fitted.values)
plot(eg_correction$fitted.values, type='l')
plot(eg_correction$actual.values, type='l')
eg_correction$model
head(eg_correction$model)
ggplot() +
geom_line(mapping = aes(x=index(price), y = wti),
data = eg_correction$model)
ggplot() +
geom_line(mapping = aes(x=price$index, y = wti),
data = eg_correction$model)
ggplot() +
geom_line(mapping = aes(x=eg_correction$model$index, y = wti),
data = eg_correction$model)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$model), y = fitted.values),
data = eg_correction)
eg_correction$fitted.values
head(eg_correction$fitted.values)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$fitted.values), y = fitted.values),
data = eg_correction)
eg_correction$fitted.values[1]
eg_correction$fitted.values[0]
index(eg_correction$fitted.values)
names(eg_correction$fitted.values)
str(names(eg_correction$fitted.values))
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$fitted.values),
y = xts(fitted.values,
order.by = as.Date(names(fitted.values))),
data = eg_correction)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$fitted.values),
y = xts(fitted.values,
order.by = as.Date(names(fitted.values)),
data = eg_correction)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$fitted.values),
y = xts(fitted.values,
order.by = as.Date(names(fitted.values))))
data = eg_correction))
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$fitted.values),
y = xts(fitted.values,
order.by = as.Date(names(fitted.values))))
data = eg_correction)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$model),
y=xts(fitted.values,
order.by = as.Date(names(fitted.values))))
data = eg_correction)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$model),
y=xts(fitted.values,
order.by = as.Date(names(fitted.values)))),
data = eg_correction)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$model),
y=xts(fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))),
data = eg_correction)
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model)
fitted = xts(eg_correction$fitted.values)
as.Date(names(eg_correction$fitted.values))
fitted = xts(eg_correction$fitted.values, order.by = as.Date(names(eg_correction$fitted.values)))
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model)
head(fitted)
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model)
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted)
head(fitted)
head(eg_correction$model)
fitted$index
fitted[,0]
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(eg_correction$model), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=fitted[,0], y = Fitted),
data = fitted)
indeX(fitted)
inde(fitted)
index(fitted)
str(index(fitted))
str(index(eg_correction$model))
str(eg_correction$model)
index(eg_correction$model)
(eg_correction$model)
(eg_correction$model[,0])
eg_correction$model[,0]
eg_correction$model[,1]
eg_correction$model[,2]
eg_correction$model[,3]
eg_correction$model[,4]
str(eg_correction$model)
names(eg_correction$model)
rownames(eg_correction$model)
str(rownames(eg_correction$model))
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model) +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted)
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red') +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue')
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red') +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue') +
xlim(c("2010-01-01", "2010-01-10"))
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red') +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue') +
xlim("2010-01-01", "2010-01-10")
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red', alpha = 0.2) +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue', alpha = 0.2)
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red', alpha = 0.2) +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue', alpha = 0.2) +
geom_line(mapping = aeS(x=index(fitted), y = eg_correction$residuals))
fitted = xts(eg_correction$fitted.values,
order.by = as.Date(names(eg_correction$fitted.values)))
colnames(fitted) <- "Fitted"
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red', alpha = 0.2) +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue', alpha = 0.2) +
geom_line(mapping = aes(x=index(fitted), y = eg_correction$residuals))
ggplot() +
geom_line(mapping = aes(x=index(fitted), y = wti),
data = eg_correction$model, color = 'red', alpha = 0.2) +
geom_line(mapping = aes(x=index(fitted), y = Fitted),
data = fitted, color = 'blue', alpha = 0.2) +
geom_line(mapping = aes(x=index(fitted), y = eg_correction$residuals),
alpha = 0.5)
ass2 <- "$\\text{var}(u_t)=\\sigma^2 < \\infinity"
row1 <- c(ass1, "Residual mean is " + mean(eg$residuals))
# Test OLS stuff
ass1 <- "$\\text{E}(\\epsilon_t)=0$"
ass2 <- "$\\text{var}(u_t)=\\sigma^2 < \\infinity$"
ass3 <- "$\\text{cov}(u_t, u_j)=0$"
ass4 <- "$\\text{cov}(u_t,x_t) = 0$"
ass5 <- "$u_t ~ N(0, \\sigma^2)$"
row1 <- c(ass1, "Residual mean is " + mean(eg$residuals))
# Test OLS stuff
ass1 <- "$\\text{E}(\\epsilon_t)=0$"
ass2 <- "$\\text{var}(u_t)=\\sigma^2 < \\infinity$"
ass3 <- "$\\text{cov}(u_t, u_j)=0$"
ass4 <- "$\\text{cov}(u_t,x_t) = 0$"
ass5 <- "$u_t ~ N(0, \\sigma^2)$"
row1 <- c(ass1, "Residual mean is ", mean(eg$residuals))
row1
row1 <- c(ass1, paste("Residual mean is ", mean(eg$residuals)))
row1
install.packageS("het.test")
install.packages("het.test")
?het.test
library(het.test)
?het.test
white.test(eg$residuals)
?white.test
white.test(eg)
white.htest(eg)
white.htest(eg$residuals)
white.test(eg$residuals)
white.test(as.ts(eg$residuals))
white <- white.test(as.ts(eg$residuals))
white$statistic
white$p.value
# Test OLS stuff
ass1 <- "$\\text{E}(\\epsilon_t)=0$"
ass2 <- "$\\text{var}(u_t)=\\sigma^2 < \\infinity$"
white <- white.test(as.ts(eg$residuals))
ass3 <- "$\\text{cov}(u_t, u_j)=0$"
ass4 <- "$\\text{cov}(u_t,x_t) = 0$"
ass5 <- "$u_t ~ N(0, \\sigma^2)$"
row1 <- c(ass1, paste("Residual mean is ", mean(eg$residuals)))
row2 <- c(ass1, paste("White test pvalue is ", white$p.value))
row2
eg <- lm(formula = log10(wti) ~ log10(brent), data = price)
eg_adf <- adf.test(eg$residuals, k=2)
eg_dat <- data.frame(diff(price$wti), diff(price$brent), lag(eg$residuals))
eg_correction <- lm(wti ~ brent + lag.eg.residuals.,
na.action = na.omit,data = eg_dat)
epsilon <- data.frame(eg_adf$statistic, eg_adf$p.value)
colnames(epsilon) <- c("Augmented Dickey-Fulley Statistic", "P Value")
row.names(epsilon) <- "$\\epsilon$"
eg_summary <- summary(eg_correction)
eg_coef <- eg_summary$coefficients
row.names(eg_coef) <- c("Intercept ($\\alpha$)",
"Brent ($\\beta_1$)",
"Residuals ($\\epsilon$)")
# Test OLS stuff
ass1 <- "$\\text{E}(\\epsilon_t)=0$"
ass2 <- "$\\text{var}(u_t)=\\sigma^2 < \\infinity$"
white <- white.test(as.ts(eg$residuals))
ass3 <- "$\\text{cov}(u_t, u_j)=0$"
ass4 <- "$\\text{cov}(u_t,x_t) = 0$"
ass5 <- "$u_t ~ N(0, \\sigma^2)$"
row1 <- c(ass1, paste("Residual mean is ", mean(eg$residuals)))
row2 <- c(ass1, paste("White test pvalue is ", white$p.value))
white$p.value
